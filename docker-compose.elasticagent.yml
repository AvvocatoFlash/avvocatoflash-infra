version: "3.8"

services:
  # --------------------------------------------------
  # Fleet Server
  # --------------------------------------------------
  fleet-server:
    image: docker.elastic.co/beats/elastic-agent:8.17.4
    container_name: fleet-server
    user: root
    restart: unless-stopped
    environment:
      - FLEET_SERVER_ENABLE=1
      - FLEET_ENROLL=1
      - FLEET_SERVER_ELASTICSEARCH_HOST=http://elasticsearch:9200
      - FLEET_SERVER_ELASTICSEARCH_USERNAME=kibana_system
      - FLEET_SERVER_ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - FLEET_SERVER_SERVICE_TOKEN=${FLEET_SERVER_SERVICE_TOKEN}
      - FLEET_SERVER_POLICY=fleet-server-policy
      - FLEET_URL=https://fleet.avvocatoflash.dev
      - FLEET_INSECURE=true
    ports:
      - "8220:8220"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
    networks:
      - elk-net

  # --------------------------------------------------
  # Dev Elastic Agent
  # --------------------------------------------------
  elastic-agent-dev:
    image: docker.elastic.co/beats/elastic-agent:8.17.4
    container_name: elastic-agent-avvocatoflash-dev
    user: root
    restart: unless-stopped
    environment:
      - FLEET_ENROLL=1
      - FLEET_URL=https://fleet.avvocatoflash.dev
      - FLEET_ENROLLMENT_TOKEN=${FLEET_ENROLLMENT_TOKEN_DEV}
      - FLEET_INSECURE=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
    networks:
      - elk-net

  # --------------------------------------------------
  # Prod Elastic Agent
  # --------------------------------------------------
  elastic-agent-prod:
    image: docker.elastic.co/beats/elastic-agent:8.17.4
    container_name: elastic-agent-avvocatoflash-prod
    user: root
    restart: unless-stopped
    environment:
      - FLEET_ENROLL=1
      - FLEET_URL=https://fleet.avvocatoflash.dev
      - FLEET_ENROLLMENT_TOKEN=${FLEET_ENROLLMENT_TOKEN_PROD}
      - FLEET_INSECURE=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
    networks:
      - elk-net

networks:
  elk-net:
    name: elk-net
    external: true
  default:
    driver: bridge
